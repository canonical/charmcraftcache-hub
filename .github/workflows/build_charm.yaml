on:
  workflow_call:
    inputs:
      github_repository:
        description: GitHub repository (e.g. "canonical/mysql-router-k8s-operator")
        required: true
        type: string
      ref:
        description: Git ref (branch, tag, commit sha, etc.)
        required: true
        type: string
      relative_path_to_charmcraft_yaml:
        description: Relative path from repository root directory to charm directory
        required: true
        type: string
      charm_index:
        description: Index of charm in charms.json
        required: true
        type: number

jobs:
  collect-platforms:
    name: Collect platforms
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install CLI
        run: pipx install ./cli/
      - name: Collect charm platforms to build from charmcraft.yaml
        id: collect
        run: collect-platforms --github-repository='${{ inputs.github_repository }}' --ref='${{ inputs.ref }}' --relative-path-to-charmcraft-yaml='${{ inputs.relative_path_to_charmcraft_yaml }}'
    outputs:
      platforms: ${{ steps.collect.outputs.platforms }}

  build:
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.collect-platforms.outputs.platforms) }}
    name: 'Build charm | ${{ matrix.platform.name }}'
    needs:
      - collect-platforms
    runs-on: ${{ matrix.platform.runner }}
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ccchub-repo/
          fetch-depth: 0  # Checkout history with git tags
      - name: (IS hosted) Install pipx
        if: ${{ contains(matrix.platform.runner, 'self-hosted') }}
        run: |
          sudo apt-get update
          sudo apt-get install pipx -y
          pipx ensurepath
      - name: Install CLI
        run: pipx install ./ccchub-repo/cli/
      - name: Set up environment
        run: |
          sudo adduser "$USER" lxd
          # `newgrp` does not work in GitHub Actions; use `sudo --user` instead
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- lxd waitready
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- lxd init --auto
          # Workaround for Docker & LXD on same machine
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT

          sudo snap install charmcraft --classic
      - run: snap list
      - name: Build charm
        run: sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- build --github-repository='${{ inputs.github_repository }}' --ref='${{ inputs.ref }}' --relative-path-to-charmcraft-yaml='${{ inputs.relative_path_to_charmcraft_yaml }}' --platform='${{ matrix.platform.name }}'
      - name: Upload wheels in charmcraft cache directory
        uses: actions/upload-artifact@v4
        with:
          name: charm-${{ inputs.charm_index }}-platform-${{ matrix.platform.name_in_artifact }}
          # Example contents of ~/charmcraftcache-hub-ci/charmcraft-cache/:
          # - charmcraft-buildd-base-v7/BuilddBaseAlias.JAMMY/pip/
          #     - http/
          #     - http-v2/
          #     - selfcheck/
          #     - wheels/
          # - charmcraft.lock
          # We only care about wheels/ directory in pip's cache
          # (https://pip.pypa.io/en/stable/topics/caching/)
          path: ~/charmcraftcache-hub-ci/charmcraft-cache/*/*/pip/wheels/
